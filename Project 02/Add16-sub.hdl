// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Adder16.hdl

/**
 * Adds two 16-bit values.
 * The most significant carry bit is ignored.
 * control input is adder/subtractor switcher
 */

CHIP Add16 {
    IN a[16], b[16], control;
    OUT out[16];

    PARTS:
    Xor(a=b[0], b=control, out=b0);
    Xor(a=b[1], b=control, out=b1);
    Xor(a=b[2], b=control, out=b2);
    Xor(a=b[3], b=control, out=b3);
    Xor(a=b[4], b=control, out=b4);
    Xor(a=b[5], b=control, out=b5);
    Xor(a=b[6], b=control, out=b6);
    Xor(a=b[7], b=control, out=b7);
    Xor(a=b[8], b=control, out=b8);
    Xor(a=b[9], b=control, out=b9);
    Xor(a=b[10], b=control, out=b10);
    Xor(a=b[11], b=control, out=b11);
    Xor(a=b[12], b=control, out=b12);
    Xor(a=b[13], b=control, out=b13);
    Xor(a=b[14], b=control, out=b14);
    Xor(a=b[15], b=control, out=b15);
  	FullAdder(a=a[0], b=b0, c=control, sum=out[0], carry=c1);
  	FullAdder(a=a[1], b=b1, c=c1, sum=out[1], carry=c2);
  	FullAdder(a=a[2], b=b2, c=c2, sum=out[2], carry=c3);
  	FullAdder(a=a[3], b=b3, c=c3, sum=out[3], carry=c4);
  	FullAdder(a=a[4], b=b4, c=c4, sum=out[4], carry=c5);
  	FullAdder(a=a[5], b=b5, c=c5, sum=out[5], carry=c6);
  	FullAdder(a=a[6], b=b6, c=c6, sum=out[6], carry=c7);
  	FullAdder(a=a[7], b=b7, c=c7, sum=out[7], carry=c8);
  	FullAdder(a=a[8], b=b8, c=c8, sum=out[8], carry=c9);
  	FullAdder(a=a[9], b=b9, c=c9, sum=out[9], carry=c10);
  	FullAdder(a=a[10], b=b10, c=c10, sum=out[10], carry=c11);
  	FullAdder(a=a[11], b=b11, c=c11, sum=out[11], carry=c12);
  	FullAdder(a=a[12], b=b12, c=c12, sum=out[12], carry=c13);
  	FullAdder(a=a[13], b=b13, c=c13, sum=out[13], carry=c14);
  	FullAdder(a=a[14], b=b14, c=c14, sum=out[14], carry=c15);
  	FullAdder(a=a[15], b=b15, c=c15, sum=out[15], carry=false);
}